from PIL import Image
import numpy as np
import cv2

def read_all(n):
    otvet = [[[] for i in range(10)] for j in range(n)]
    for j in range(n):
        otvet[j][0] = cv2.imread(f"faces/s{j+1}/1.pgm",  cv2.IMREAD_GRAYSCALE)
    for i in range(n):
        for h in range(9):
            otvet[i][h+1] = cv2.imread(f"faces/s{i+1}/{h+2}.pgm",  cv2.IMREAD_GRAYSCALE)
    return otvet

def read_for_shatie(n):
    schitivaem = read_all(n)
    otvet = [[[[0 for b in range(92 // 4)] for a in range(112 // 4)] for i in range(10)] for j in range(n)]
    for j in range(n):
        for i in range(10):
            for a in range(112):
                for b in range(92):
                    otvet[j][i][a // 4][b // 4] += schitivaem[j][i][a][b]//16
    return otvet

def shatie_img(output, width, height, x, y):
    global mas_sh
    a = mas_sh[x][y]
    array = [[[0, 0, 0] for i in range(width * 4)]for j in range(height * 4)]
    for j in range(height):
        for i in range(width):
            for u in range(16):
                array[j * 4 + (u // 4)][i * 4 + (u % 4)][0] = a[j][i]
                array[j * 4 + (u // 4)][i * 4 + (u % 4)][1] = a[j][i]
                array[j * 4 + (u // 4)][i * 4 + (u % 4)][2] = a[j][i]
    array = np.array(array, dtype=np.uint8)
    img = Image.fromarray(array)
    img.save(output)

def rand_img(output, width, height, x, y):
    global points
    dotes = [[2, 0], [1, 5], [3, 9], [3, 14], [3, 20], [0, 20], [4, 26], [1, 31], [3, 36], [0, 36], [4, 40], [2, 45], [4, 48], [0, 56], [3, 59], [0, 62], [2, 66], [2, 72], [3, 74], [4, 77], [3, 80], [4, 84], [2, 90], [0, 92], [3, 99], [0, 100], [2, 107], [7, 1], [7, 7], [5, 11], [6, 16], [4, 20], [7, 23], [4, 25], [5, 28], [8, 34], [4, 38], [8, 42], [7, 44], [6, 50], [8, 52], [8, 56], [6, 60], [5, 64], [6, 68], [5, 74], [8, 80], [8, 82], [5, 85], [5, 92], [8, 92], [5, 99], [7, 100], [8, 104], [11, 1], [9, 6], [10, 12], [9, 13], [9, 20], [10, 23], [12, 28], [11, 31], [9, 36], [12, 37], [8, 41], [11, 46], [11, 52], [10, 56], [10, 57], [10, 62], [10, 66], [8, 70], [10, 72], [11, 76], [11, 80], [8, 86], [11, 88], [12, 95], [9, 96], [9, 100], [8, 108], [14, 1], [13, 5], [12, 8], [14, 14], [12, 17], [14, 22], [14, 25], [13, 29], [16, 35], [15, 37], [13, 43], [13, 48], [14, 49], [14, 52], [14, 57], [15, 61], [13, 64], [13, 69], [12, 76], [15, 76], [16, 83], [15, 87], [12, 91], [12, 94], [14, 97], [15, 103], [16, 105], [19, 1], [19, 5], [17, 12], [16, 13], [19, 17], [17, 23], [16, 27], [20, 31], [19, 33], [20, 36], [19, 42], [16, 46], [20, 50], [16, 55], [19, 58], [16, 61], [20, 67], [18, 69], [17, 76], [16, 79], [20, 83], [18, 85], [17, 90], [19, 93], [20, 100], [16, 104], [18, 105], [23, 4], [21, 7], [23, 11], [21, 15], [24, 19], [21, 20], [24, 28], [23, 35], [24, 40], [23, 44], [23, 48], [20, 48], [20, 53], [21, 56], [23, 62], [24, 66], [21, 70], [20, 73], [22, 76], [22, 84], [22, 86], [20, 92], [22, 92], [22, 102], [22, 105], [28, 0], [26, 4], [26, 11], [28, 15], [28, 20], [25, 23], [28, 25], [28, 28], [25, 32], [28, 37], [28, 44], [25, 45], [24, 50], [24, 52], [27, 58], [25, 61], [27, 64], [28, 72], [24, 75], [28, 76], [27, 81], [28, 87], [27, 88], [24, 93], [28, 100], [25, 101], [25, 108], [30, 0], [30, 7], [31, 11], [32, 13], [32, 19], [28, 24], [31, 28], [29, 32], [31, 36], [29, 40], [32, 41], [28, 47], [31, 52], [28, 53], [28, 57], [31, 61], [29, 64], [28, 68], [29, 75], [30, 80], [29, 88], [30, 88], [30, 93], [30, 99], [31, 100], [30, 108], [33, 0], [32, 7], [36, 8], [33, 14], [32, 20], [36, 21], [36, 24], [33, 29], [32, 32], [33, 37], [36, 40], [35, 45], [35, 49], [34, 54], [32, 57], [36, 63], [32, 68], [34, 72], [36, 75], [33, 77], [36, 84], [33, 88], [34, 91], [35, 96], [36, 99], [34, 103], [36, 106], [38, 2], [40, 7], [38, 8], [37, 15], [38, 19], [36, 20], [40, 27], [40, 32], [39, 35], [38, 36], [38, 41], [39, 46], [38, 52], [40, 56], [36, 61], [40, 68], [38, 70], [38, 72], [40, 78], [38, 81], [40, 87], [39, 88], [37, 94], [39, 97], [39, 103], [39, 106], [43, 1], [40, 6], [43, 11], [40, 15], [42, 16], [44, 21], [44, 27], [41, 29], [41, 34], [41, 39], [42, 40], [44, 45], [44, 49], [40, 53], [41, 57], [43, 61], [41, 65], [43, 70], [43, 75], [44, 78], [42, 84], [42, 88], [42, 90], [40, 96], [42, 97], [42, 101], [41, 108], [48, 4], [45, 4], [45, 9], [44, 13], [45, 19], [46, 24], [44, 24], [45, 30], [44, 34], [45, 40], [48, 43], [44, 46], [47, 50], [47, 56], [48, 59], [44, 63], [47, 67], [48, 68], [44, 73], [44, 76], [47, 83], [44, 88], [46, 92], [45, 97], [48, 102], [46, 108], [51, 3], [49, 6], [48, 9], [52, 12], [49, 16], [49, 22], [49, 27], [48, 30], [52, 34], [48, 37], [52, 42], [51, 47], [48, 52], [49, 52], [49, 57], [50, 63], [49, 65], [51, 69], [50, 76], [51, 78], [52, 80], [51, 87], [48, 91], [48, 92], [51, 98], [49, 100], [49, 107], [56, 4], [54, 10], [56, 13], [56, 19], [56, 21], [56, 28], [55, 29], [54, 35], [54, 37], [54, 40], [55, 48], [54, 51], [52, 56], [56, 57], [55, 61], [56, 67], [56, 71], [56, 74], [53, 80], [55, 81], [54, 87], [55, 92], [55, 93], [55, 98], [54, 100], [53, 108], [60, 4], [57, 12], [59, 13], [60, 17], [58, 22], [57, 27], [58, 30], [59, 36], [56, 38], [58, 43], [57, 44], [58, 48], [57, 54], [56, 58], [60, 61], [57, 67], [58, 72], [57, 75], [59, 77], [57, 82], [56, 86], [60, 92], [59, 94], [56, 97], [59, 100], [58, 107], [62, 1], [60, 6], [61, 11], [61, 16], [60, 20], [62, 22], [64, 26], [60, 29], [62, 34], [61, 40], [60, 41], [61, 48], [62, 48], [61, 52], [60, 59], [64, 60], [64, 66], [62, 71], [60, 72], [61, 80], [62, 84], [63, 86], [64, 90], [64, 93], [60, 96], [61, 103], [60, 105], [64, 2], [66, 7], [68, 12], [65, 16], [65, 19], [65, 22], [68, 26], [65, 32], [64, 32], [65, 37], [67, 44], [64, 48], [67, 50], [67, 56], [66, 56], [65, 63], [65, 68], [65, 72], [66, 77], [64, 84], [68, 88], [66, 89], [68, 96], [64, 96], [66, 104], [64, 108], [69, 1], [72, 5], [70, 12], [70, 15], [69, 17], [69, 24], [70, 26], [68, 29], [70, 34], [68, 37], [72, 42], [70, 46], [69, 50], [68, 52], [70, 59], [69, 60], [71, 64], [72, 68], [71, 72], [69, 77], [72, 84], [71, 90], [68, 95], [71, 100], [69, 101], [69, 104], [72, 1], [73, 5], [73, 10], [73, 13], [75, 16], [75, 22], [75, 28], [75, 29], [74, 35], [73, 39], [76, 42], [74, 48], [74, 50], [72, 52], [75, 56], [76, 60], [73, 68], [73, 71], [73, 74], [74, 78], [75, 82], [74, 90], [73, 93], [73, 98], [76, 100], [75, 105], [77, 3], [76, 5], [76, 11], [77, 15], [79, 17], [77, 21], [79, 27], [78, 31], [80, 32], [76, 36], [78, 42], [76, 46], [77, 51], [77, 56], [77, 60], [78, 63], [79, 66], [79, 71], [78, 74], [79, 80], [76, 84], [77, 86], [78, 88], [79, 94], [77, 99], [79, 104], [77, 108], [84, 1], [81, 5], [83, 12], [83, 13], [82, 16], [82, 20], [82, 27], [82, 30], [83, 32], [82, 39], [84, 44], [81, 45], [81, 50], [83, 54], [82, 56], [80, 63], [80, 67], [84, 68], [84, 73], [84, 80], [80, 80], [80, 85], [84, 92], [81, 95], [83, 100], [84, 104], [87, 2], [87, 7], [86, 10], [85, 16], [88, 19], [85, 24], [84, 24], [86, 32], [86, 35], [87, 36], [87, 43], [87, 47], [86, 52], [86, 56], [84, 56], [84, 61], [86, 65], [87, 69], [88, 76], [87, 77], [86, 84], [87, 85], [85, 91], [84, 96], [86, 97], [87, 102], [85, 106]]
    global mas
    a = mas[x][y]
    array = [[[0, 0, 0] for i in range(width)]for j in range(height)]
    for j in range(height):
        for i in range(width):
            if [j, i] in dotes:
                array[j][i][0] = a[j][i]
                array[j][i][1] = a[j][i]
                array[j][i][2] = a[j][i]
    array = np.array(array, dtype=np.uint8)
    img = Image.fromarray(array)
    img.save(output)

mas = read_all(40)
mas_sh = read_for_shatie(40)
for i in range(40):
    for j in range(10):
        shatie_img(f"mash/{i + 1}.{j + 1}.pgm", 23, 28, i, j)
        rand_img(f"rand_points/{i + 1}.{j + 1}.pgm", 23 * 4, 28 * 4, i, j)
print()